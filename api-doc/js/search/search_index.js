var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.243,1,1.771]],["body/controllers/AppController.html",[0,1.918,1,2.731,2,1.503,3,0.445,4,0.376,5,0.376,6,2.874,7,0.68,8,1.718,9,4.255,10,1.503,11,0.042,12,0.865,13,3.512,14,1.347,15,1.382,16,0.662,17,0.969,18,2.363,19,2.874,20,0.445,21,0.069,22,2.454,23,2.14,24,1.503,25,3.512,26,0.025,27,0.032,28,0.025]],["title/modules/AppModule.html",[29,1.243,30,1.771]],["body/modules/AppModule.html",[1,2.339,2,1.38,3,0.276,4,0.233,5,0.233,8,0.836,11,0.042,12,0.537,14,0.836,16,0.743,17,0.602,18,2.268,19,1.784,20,0.409,21,0.063,26,0.016,27,0.023,28,0.016,29,1.642,30,3.232,31,1.044,32,1.044,33,1.329,34,1.329,35,1.044,36,2.339,37,1.329,38,1.784,39,1.784,40,1.784,41,2.55,42,2.55,43,1.965,44,1.329,45,1.329,46,2.18,47,2.639,48,2.18,49,3.225,50,4.24,51,2.18,52,1.044,53,0.75,54,0.794,55,1.044,56,2.18,57,1.784,58,3.225,59,1.784,60,1.329,61,2.18,62,2.18,63,2.18,64,1.173,65,2.18,66,1.329,67,2.18,68,1.524,69,2.253,70,2.18,71,2.18,72,2.18,73,2.18,74,2.253,75,1.784,76,2.18,77,2.18,78,2.18,79,2.18,80,2.18,81,2.18,82,2.18,83,2.18,84,3.225,85,2.18,86,2.18,87,3.141,88,2.18,89,2.18,90,2.18,91,2.18,92,2.18,93,2.18,94,1.784,95,2.18,96,2.18]],["title/injectables/AppService.html",[18,1.391,97,0.999]],["body/injectables/AppService.html",[3,0.471,4,0.398,5,0.398,7,0.72,8,1.781,9,4.344,11,0.041,12,0.916,14,1.426,15,1.432,16,0.549,17,1.026,18,2.224,20,0.471,21,0.073,24,1.591,26,0.027,27,0.033,28,0.027,97,1.598,98,2.001,99,3.043,100,3.718,101,3.718,102,3.718]],["title/classes/CommonEntity.html",[21,0.057,103,1.771]],["body/classes/CommonEntity.html",[3,0.357,4,0.301,5,0.301,7,0.545,10,2.137,11,0.041,12,1.23,15,1.193,16,0.416,20,0.357,21,0.055,26,0.02,27,0.028,28,0.02,54,1.23,103,2.359,104,1.08,105,2.304,106,2.359,107,4.423,108,2.359,109,3.62,110,3.62,111,2.118,112,2.696,113,3.62,114,4.222,115,3.62,116,2.815,117,3.62,118,2.815,119,2.304,120,2.815,121,2.705,122,2.304,123,1.716,124,2.815,125,3.62,126,2.815,127,2.304,128,2.815,129,1.716,130,2.815,131,2.815,132,2.815]],["title/classes/CreateUserDto.html",[21,0.057,133,1.391]],["body/classes/CreateUserDto.html",[3,0.461,4,0.39,5,0.39,7,0.705,10,1.558,11,0.041,12,0.897,15,1.414,16,0.538,20,0.461,21,0.09,26,0.026,27,0.033,28,0.026,53,1.726,54,0.897,104,1.396,108,2.794,133,2.195,134,3.752,135,2.544,136,2.979,137,3.64,138,3.752,139,2.979,140,2.979,141,2.544,142,2.979,143,2.979]],["title/classes/CreateUserTypeDto.html",[21,0.057,144,1.391]],["body/classes/CreateUserTypeDto.html",[3,0.452,4,0.382,5,0.382,7,0.69,10,1.526,11,0.041,12,0.878,15,1.395,16,0.527,20,0.452,21,0.089,26,0.026,27,0.032,28,0.026,53,1.709,54,0.878,104,1.367,108,2.758,136,2.918,138,3.703,139,2.918,140,2.918,141,2.492,142,2.918,143,2.918,144,2.166,145,1.936,146,3.703,147,1.395,148,2.492,149,3.566]],["title/injectables/LoggerMiddleware.html",[66,1.771,97,0.999]],["body/injectables/LoggerMiddleware.html",[3,0.27,4,0.228,5,0.228,7,0.412,8,1.214,11,0.043,12,0.524,14,0.816,16,0.468,17,0.587,20,0.27,21,0.042,24,1.618,26,0.015,27,0.023,28,0.015,52,1.018,53,0.731,54,0.524,55,1.018,57,1.741,66,1.93,74,2.643,94,1.741,97,1.089,98,1.145,112,2.305,123,1.296,150,1.741,151,3.166,152,3.166,153,4.189,154,3.782,155,4.189,156,4.479,157,4.189,158,2.127,159,2.127,160,3.166,161,1.741,162,4.189,163,2.127,164,2.591,165,2.127,166,2.127,167,4.479,168,2.127,169,2.127,170,2.127,171,3.166,172,2.127,173,2.127,174,2.127,175,2.127,176,2.127,177,2.127,178,2.127,179,2.127,180,2.127,181,2.127,182,2.127,183,3.782,184,2.127,185,3.166,186,2.127,187,2.127,188,2.127,189,2.127,190,2.127,191,2.127,192,2.127]],["title/classes/UpdateUserDto.html",[21,0.057,193,1.563]],["body/classes/UpdateUserDto.html",[3,0.498,4,0.42,5,0.42,11,0.041,16,0.71,20,0.498,21,0.077,26,0.028,27,0.035,28,0.028,104,1.506,106,2.394,133,1.881,135,2.745,193,2.586,194,3.215,195,3.215,196,2.745,197,2.114,198,1.881,199,2.745,200,3.928]],["title/classes/UpdateUserTypeDto.html",[21,0.057,201,1.563]],["body/classes/UpdateUserTypeDto.html",[3,0.49,4,0.413,5,0.413,11,0.041,16,0.703,20,0.49,21,0.076,26,0.028,27,0.034,28,0.028,104,1.481,106,2.354,144,1.849,145,1.653,147,1.467,148,2.699,195,3.161,196,2.699,197,2.079,198,1.849,201,2.56,202,3.161,203,2.699,204,3.862]],["title/classes/User.html",[21,0.057,147,0.896]],["body/classes/User.html",[3,0.544,4,0.459,5,0.459,11,0.039,20,0.544,21,0.084,26,0.031,27,0.036,28,0.031,104,1.646,147,1.563,205,3.512]],["title/classes/UserTypeEntity.html",[21,0.057,206,1.563]],["body/classes/UserTypeEntity.html",[3,0.324,4,0.274,5,0.274,7,0.495,10,2.142,11,0.042,12,1.233,15,1.295,16,0.534,20,0.324,21,0.05,26,0.018,27,0.026,28,0.018,53,1.445,54,1.233,74,2.529,87,2.962,103,3.204,104,0.98,106,2.206,108,2.206,109,2.962,110,2.962,111,1.733,112,2.206,113,2.962,114,3.438,115,2.092,117,2.092,119,2.092,121,1.787,122,2.092,123,1.558,125,2.092,127,2.962,129,1.558,145,1.549,206,1.947,207,2.962,208,2.092,209,3.619,210,2.557,211,3.619,212,2.557,213,4.82,214,2.557,215,2.557,216,2.557,217,2.557,218,2.557,219,2.557,220,2.557,221,2.557,222,2.557]],["title/controllers/UserTypesController.html",[0,1.243,223,1.771]],["body/controllers/UserTypesController.html",[0,0.763,2,0.763,3,0.226,4,0.191,5,0.191,7,0.345,8,1.062,10,1.958,11,0.042,12,1.127,14,1.754,15,1.583,16,0.565,17,0.492,20,0.226,21,0.035,22,1.246,23,1.087,24,1.958,26,0.013,27,0.02,28,0.013,52,1.983,53,1.425,54,1.021,55,1.983,64,2.545,111,2.264,144,2.099,145,2.024,147,1.18,197,1.49,198,1.326,201,2.545,203,1.935,223,1.688,224,1.46,225,1.46,226,2.266,227,2.332,228,3.131,229,1.688,230,1.688,231,1.688,232,1.46,233,2.778,234,1.783,235,1.46,236,2.769,237,1.783,238,1.783,239,2.769,240,1.783,241,1.087,242,2.266,243,1.783,244,1.087,245,2.266,246,1.783,247,1.087,248,2.266,249,1.783,250,2.266,251,1.46,252,1.46,253,1.246,254,1.625,255,1.46,256,1.087,257,1.087,258,1.783,259,1.46,260,1.783,261,1.783,262,1.783,263,1.46,264,1.783,265,1.46,266,1.783,267,1.46,268,1.783,269,1.783,270,1.783]],["title/modules/UserTypesModule.html",[29,1.243,41,1.563]],["body/modules/UserTypesModule.html",[2,1.764,3,0.392,4,0.331,5,0.331,11,0.042,16,0.761,17,0.853,20,0.392,21,0.06,26,0.022,27,0.03,28,0.022,29,1.985,31,1.48,32,1.48,33,1.884,34,1.884,35,1.48,36,2.827,37,1.884,41,2.854,43,2.513,44,1.884,45,1.884,47,2.529,59,2.529,60,1.884,64,1.663,145,1.323,147,1.271,206,1.663,223,2.827,254,2.539,255,2.529,271,2.529,272,2.529,273,3.09,274,3.09,275,2.529,276,2.529,277,3.09]],["title/injectables/UserTypesService.html",[97,0.999,254,1.391]],["body/injectables/UserTypesService.html",[3,0.154,4,0.13,5,0.13,7,0.236,8,0.781,11,0.043,12,1.01,14,1.499,15,1.424,16,0.544,17,0.336,20,0.154,21,0.024,23,0.742,24,2.11,26,0.009,27,0.015,28,0.009,52,1.764,53,1.465,54,0.908,55,1.764,60,0.742,64,2.292,97,0.7,98,0.656,111,1.467,112,1.598,123,0.742,129,0.742,144,1.764,145,1.822,147,0.628,164,3.695,198,0.975,201,2.206,203,1.423,206,0.656,226,1.666,227,1.867,228,2.507,229,1.241,230,1.241,231,1.241,232,1.666,235,1.666,241,1.241,244,1.241,247,1.241,253,1.423,254,0.975,256,0.742,257,0.742,275,0.997,276,0.997,278,0.997,279,5.182,280,2.036,281,1.218,282,2.507,283,1.218,284,2.036,285,1.218,286,1.218,287,1.218,288,1.218,289,1.218,290,1.218,291,1.218,292,1.218,293,1.218,294,1.218,295,1.218,296,2.622,297,4.515,298,1.218,299,4.099,300,1.218,301,2.622,302,0.851,303,1.218,304,2.036,305,4.259,306,2.622,307,4.866,308,2.036,309,2.036,310,2.036,311,3.684,312,1.218,313,1.218,314,3.408,315,4.099,316,3.684,317,1.218,318,2.036,319,1.218,320,1.218,321,2.036,322,2.036,323,1.218,324,1.218,325,0.997]],["title/controllers/UsersController.html",[0,1.243,326,1.771]],["body/controllers/UsersController.html",[0,0.91,2,0.91,3,0.27,4,0.228,5,0.228,7,0.412,8,1.214,10,1.917,11,0.042,12,1.103,14,1.717,15,1.574,16,0.619,17,0.587,20,0.27,21,0.042,22,1.486,23,1.296,24,1.917,26,0.015,27,0.023,28,0.015,52,2.006,53,1.441,54,1.032,55,2.006,111,2.248,133,2.248,193,2.689,198,1.516,199,2.212,225,1.741,227,2.553,229,1.93,230,1.93,231,1.93,233,3.095,241,1.296,242,2.591,244,1.296,245,2.591,247,1.296,248,2.591,250,2.591,251,1.741,252,1.741,253,1.486,256,1.296,257,1.296,259,1.741,263,1.741,265,1.741,267,1.741,326,1.93,327,1.741,328,1.486,329,1.741,330,2.127,331,2.127,332,2.127,333,2.127,334,2.127,335,1.811,336,1.741,337,2.127,338,2.127,339,2.127,340,2.127,341,2.127,342,2.127]],["title/modules/UsersModule.html",[29,1.243,42,1.563]],["body/modules/UsersModule.html",[2,1.858,3,0.424,4,0.358,5,0.358,11,0.041,16,0.712,17,0.923,20,0.424,21,0.065,26,0.024,27,0.031,28,0.024,29,2.063,31,1.601,32,1.601,33,2.037,34,2.037,35,1.601,36,2.938,37,2.037,42,2.917,43,2.646,44,2.037,45,2.037,326,2.938,335,2.595,336,2.736,343,2.736,344,2.736,345,3.343,346,3.343]],["title/injectables/UsersService.html",[97,0.999,335,1.391]],["body/injectables/UsersService.html",[3,0.289,4,0.244,5,0.244,7,0.441,8,1.278,11,0.042,12,1.136,14,1.906,15,1.421,16,0.582,17,0.629,20,0.289,21,0.045,24,1.972,26,0.016,27,0.024,28,0.016,52,2.074,53,1.49,54,1.067,55,2.074,97,1.146,98,1.227,111,2.305,121,3.633,133,2.207,147,1.336,193,2.676,198,1.596,199,2.329,227,2.641,229,2.031,230,2.031,231,2.031,241,2.031,244,2.031,247,2.031,256,1.39,257,1.39,302,1.593,328,1.593,329,2.728,335,1.596,347,1.866,348,2.28,349,2.28,350,2.28,351,2.28,352,2.28,353,4.609,354,2.28,355,2.28,356,2.28]],["title/coverage.html",[357,2.763]],["body/coverage.html",[0,1.772,1,1.519,5,0.267,6,2.04,11,0.041,18,1.193,21,0.1,26,0.018,27,0.026,28,0.018,35,1.193,54,0.614,64,1.913,66,1.519,68,1.742,69,1.742,97,1.553,99,2.04,103,1.519,105,2.04,133,1.193,134,2.04,135,2.484,144,1.193,145,2.043,146,2.04,147,1.277,148,2.484,150,2.04,193,1.341,194,2.04,201,1.341,202,2.04,205,2.04,206,1.341,207,2.04,208,2.04,223,1.519,224,2.04,254,1.193,278,2.04,302,1.742,325,4.659,326,1.519,327,2.04,335,1.193,347,2.04,357,1.742,358,2.493,359,2.493,360,2.493,361,4.773,362,4.142,363,2.04,364,2.493,365,4.963,366,2.493,367,2.493,368,2.493,369,2.909,370,2.909,371,3.554,372,2.493,373,2.493]],["title/dependencies.html",[32,1.671,374,2.431]],["body/dependencies.html",[11,0.042,17,0.945,21,0.086,26,0.025,27,0.032,28,0.025,32,1.64,60,2.088,75,2.803,129,2.088,141,2.394,161,2.803,196,2.394,197,1.843,375,4.877,376,3.425,377,3.425,378,3.425,379,3.425,380,3.425,381,3.425,382,3.425,383,3.425,384,3.425,385,3.425,386,3.425,387,3.425,388,3.425,389,3.425,390,3.425,391,3.425,392,3.425,393,3.425,394,3.425,395,3.425,396,3.425,397,3.425]],["title/miscellaneous/functions.html",[398,1.482,399,2.857]],["body/miscellaneous/functions.html",[7,0.841,11,0.037,26,0.031,27,0.037,28,0.031,35,2.596,363,3.556,398,2.648,399,3.556,400,4.345]],["title/index.html",[7,0.471,401,2.431,402,2.431]],["body/index.html",[4,0.305,11,0.041,26,0.02,27,0.028,28,0.02,282,2.332,357,1.992,403,2.85,404,2.85,405,3.903,406,2.85,407,2.85,408,2.85,409,2.85,410,2.85,411,2.85,412,2.85,413,4.451,414,2.85,415,2.85,416,2.85,417,5.302,418,2.85,419,2.85,420,2.85,421,5.178,422,2.85,423,2.85,424,3.903,425,2.85,426,2.85,427,2.85,428,2.85,429,3.903,430,3.903,431,2.85,432,2.85,433,2.85,434,3.903,435,3.903,436,2.85,437,2.85,438,2.85,439,2.85,440,2.85,441,2.332,442,2.85,443,2.85,444,2.85,445,2.85,446,2.85,447,2.85,448,2.85,449,2.85,450,2.85,451,2.85,452,2.85,453,2.85,454,2.85,455,2.85,456,2.85,457,2.85,458,2.85,459,2.85]],["title/modules.html",[31,1.893]],["body/modules.html",[11,0.036,26,0.03,27,0.036,28,0.03,30,2.522,31,1.981,41,2.227,42,2.227,441,4.347,460,5.312,461,5.312,462,5.312]],["title/overview.html",[463,3.236]],["body/overview.html",[2,1.41,11,0.039,18,2.292,26,0.024,27,0.031,28,0.024,29,1.41,30,3.399,31,1.578,32,1.578,33,2.009,34,2.009,35,1.578,36,2.009,37,2.009,38,2.697,39,2.697,40,2.697,41,2.833,42,2.833,43,2.621,44,2.009,45,2.009,98,1.773,104,1.264,254,2.292,271,2.697,272,2.697,335,2.292,343,2.697,344,2.697,463,2.697,464,4.301,465,3.295,466,3.295]],["title/miscellaneous/variables.html",[398,1.482,467,2.857]],["body/miscellaneous/variables.html",[7,0.724,11,0.042,26,0.027,27,0.033,28,0.027,54,1.148,68,3.257,69,3.257,147,1.153,197,2.012,328,2.612,369,3.059,370,4.157,398,2.278,467,3.059,468,4.661,469,4.661,470,4.661,471,3.738,472,3.738]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":325,"title":{},"body":{"injectables/UserTypesService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["0.2.31",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":123,"title":{},"body":{"classes/CommonEntity.html":{},"injectables/LoggerMiddleware.html":{},"classes/UserTypeEntity.html":{},"injectables/UserTypesService.html":{}}}],["2.18.1",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":309,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["201",{"_index":300,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["3",{"_index":464,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":465,"title":{},"body":{"overview.html":{}}}],["6.6.6",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":466,"title":{},"body":{"overview.html":{}}}],["7.1.5",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":130,"title":{},"body":{"classes/CommonEntity.html":{}}}],["action",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{}}}],["active",{"_index":313,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["adds",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{}}}],["already",{"_index":322,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["amazing",{"_index":442,"title":{},"body":{"index.html":{}}}],["app",{"_index":419,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":411,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":279,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["author",{"_index":452,"title":{},"body":{"index.html":{}}}],["authorizationheader",{"_index":165,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["authorizationheader.split",{"_index":169,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["await",{"_index":297,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["backers",{"_index":443,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":107,"title":{},"body":{"classes/CommonEntity.html":{}}}],["bcryptjs",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":250,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":462,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":460,"title":{},"body":{"modules.html":{}}}],["building",{"_index":406,"title":{},"body":{"index.html":{}}}],["catch",{"_index":187,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["check",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["check.ts",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkauthroutes",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":21,"title":{"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":104,"title":{},"body":{"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":343,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":344,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usertypesmodule",{"_index":271,"title":{},"body":{"modules/UserTypesModule.html":{},"overview.html":{}}}],["cluster_usertypesmodule_providers",{"_index":272,"title":{},"body":{"modules/UserTypesModule.html":{},"overview.html":{}}}],["column",{"_index":127,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["column({default",{"_index":122,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["column({default:1",{"_index":132,"title":{},"body":{"classes/CommonEntity.html":{}}}],["column({nullable",{"_index":210,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["common.entity",{"_index":220,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["commonentity",{"_index":103,"title":{"classes/CommonEntity.html":{}},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{},"coverage.html":{}}}],["commonentity:11",{"_index":214,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["commonentity:14",{"_index":218,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["commonentity:17",{"_index":215,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["commonentity:5",{"_index":216,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["commonentity:8",{"_index":217,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["configure",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('request",{"_index":192,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(req.headers",{"_index":191,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["const",{"_index":164,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/UserTypesService.html":{}}}],["constructor",{"_index":280,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["constructor(usertyperepository",{"_index":281,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["consumer",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware).exclude",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UserTypesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('user",{"_index":258,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["controller('users",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":357,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":198,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":259,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(createusertypedto",{"_index":232,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{}}}],["created",{"_index":304,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["created_at",{"_index":109,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["createdatecolumn",{"_index":115,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["createnewusertype",{"_index":296,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["createuserdto",{"_index":133,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createusertypedto",{"_index":144,"title":{"classes/CreateUserTypeDto.html":{}},"body":{"classes/CreateUserTypeDto.html":{},"classes/UpdateUserTypeDto.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"coverage.html":{}}}],["cross_check_user",{"_index":179,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["data",{"_index":299,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["database",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":114,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":253,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{}}}],["delete('/delete/:id",{"_index":236,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["delete(':id",{"_index":245,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["deleted",{"_index":316,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["deleted_at",{"_index":110,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["deletedatecolumn",{"_index":117,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["deleteddata",{"_index":318,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":412,"title":{},"body":{"index.html":{}}}],["development",{"_index":420,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity.js",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["donotcheckauthroutes",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dotenv",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["dropschema",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/create",{"_index":256,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":257,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":188,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["e2e",{"_index":431,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":407,"title":{},"body":{"index.html":{}}}],["entities",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["entities/user",{"_index":275,"title":{},"body":{"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{}}}],["entity",{"_index":219,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["entity('user_types",{"_index":221,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["entry",{"_index":303,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["error_message",{"_index":183,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["expecteddata",{"_index":307,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["expired",{"_index":184,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":161,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":106,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/UserTypeEntity.html":{}}}],["false",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"classes/UserTypeEntity.html":{}}}],["fetched",{"_index":310,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["finaldelete",{"_index":226,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{}}}],["finaldelete(@param('id",{"_index":269,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["finaldelete(id",{"_index":235,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{}}}],["findall",{"_index":227,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findalllist",{"_index":228,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{}}}],["findone",{"_index":229,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":263,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":241,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fire",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["forroutes",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":311,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["framework",{"_index":405,"title":{},"body":{"index.html":{}}}],["function",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":399,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/list",{"_index":239,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["get(':id",{"_index":242,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":401,"title":{"index.html":{}},"body":{}}],["grow",{"_index":438,"title":{},"body":{"index.html":{}}}],["here",{"_index":449,"title":{},"body":{"index.html":{}}}],["host",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":456,"title":{},"body":{"index.html":{}}}],["id",{"_index":111,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["if(authorizationheader",{"_index":168,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["if(cross_check_user",{"_index":181,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["if(deleteddata.raw.affectedrows",{"_index":324,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["if(deleteddata.raw.changedrows",{"_index":320,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["if(token",{"_index":170,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["implements",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":213,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["injectable",{"_index":97,"title":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserTypesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserTypesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":98,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UserTypesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":292,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["injectrepository(usertypeentity",{"_index":293,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["insecureauth",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["installation",{"_index":416,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":418,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":189,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["isstring",{"_index":138,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{}}}],["isstring()@minlength(3)@maxlength(200",{"_index":136,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{}}}],["join",{"_index":445,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["jwt.verify(token",{"_index":172,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["jwtdecode",{"_index":171,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["kamil",{"_index":453,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":459,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":435,"title":{},"body":{"index.html":{}}}],["log",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.log(req.body['_user_id",{"_index":182,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger.middleware",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermiddleware",{"_index":66,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["logging",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":139,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{}}}],["maxlength(200",{"_index":143,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{}}}],["message",{"_index":301,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["message:\"data",{"_index":315,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["message:\"no",{"_index":306,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["metadata",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["minlength",{"_index":140,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{}}}],["minlength(3",{"_index":142,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{}}}],["miscellaneous",{"_index":398,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":434,"title":{},"body":{"index.html":{}}}],["mode",{"_index":424,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/user",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":448,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":454,"title":{},"body":{"index.html":{}}}],["name",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":413,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":458,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":196,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":160,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":302,"title":{},"body":{"injectables/UserTypesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newdata",{"_index":295,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["next",{"_index":156,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nextfunction",{"_index":157,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":404,"title":{},"body":{"index.html":{}}}],["npm",{"_index":417,"title":{},"body":{"index.html":{}}}],["null",{"_index":209,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["nullable",{"_index":222,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["number",{"_index":121,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{},"injectables/UsersService.html":{}}}],["number(process.env.database_port",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["open",{"_index":436,"title":{},"body":{"index.html":{}}}],["optional",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":463,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":374,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":252,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":195,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{}}}],["partialtype(createuserdto",{"_index":200,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createusertypedto",{"_index":204,"title":{},"body":{"classes/UpdateUserTypeDto.html":{}}}],["password",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":446,"title":{},"body":{"index.html":{}}}],["port",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":233,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":225,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":128,"title":{},"body":{"classes/CommonEntity.html":{}}}],["primarygeneratedcolumn(\"uuid",{"_index":131,"title":{},"body":{"classes/CommonEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":119,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["private",{"_index":294,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["process.env.database_db",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_host",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_password",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_user",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.secret",{"_index":173,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["production",{"_index":426,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":403,"title":{},"body":{"index.html":{}}}],["project",{"_index":437,"title":{},"body":{"index.html":{}}}],["properties",{"_index":108,"title":{},"body":{"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"classes/UserTypeEntity.html":{}}}],["provided",{"_index":186,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":251,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":248,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["read",{"_index":447,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":230,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":267,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":244,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":282,"title":{},"body":{"injectables/UserTypesService.html":{},"index.html":{}}}],["req",{"_index":159,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.body['_user",{"_index":174,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.body['_user'].data.id",{"_index":176,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.body['_user'].data.user_type",{"_index":178,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.body['_user_id",{"_index":175,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.body['user_type",{"_index":177,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.headers['authorization",{"_index":166,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request",{"_index":153,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["res",{"_index":154,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["res.status(401).json(responseinterface",{"_index":190,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["res.status(403).json(responseinterface",{"_index":185,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":155,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["responseinterface",{"_index":162,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["routes.auth",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":421,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":408,"title":{},"body":{"index.html":{}}}],["schema",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":409,"title":{},"body":{"index.html":{}}}],["side",{"_index":410,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":440,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../routes.auth",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:32",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":99,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common.entity.ts",{"_index":105,"title":{},"body":{"classes/CommonEntity.html":{},"coverage.html":{}}}],["src/common.entity.ts:11",{"_index":116,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common.entity.ts:14",{"_index":126,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common.entity.ts:17",{"_index":118,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common.entity.ts:5",{"_index":120,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common.entity.ts:8",{"_index":124,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/logger.middleware.ts",{"_index":150,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/logger.middleware.ts:6",{"_index":158,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/main.ts",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/user",{"_index":145,"title":{},"body":{"classes/CreateUserTypeDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"coverage.html":{}}}],["src/modules/users/dto/create",{"_index":134,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/update",{"_index":194,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/entities/user.entity.ts",{"_index":205,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:11",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:16",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:21",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:26",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:31",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":345,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:11",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:15",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:19",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:23",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:7",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/routes.auth",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":422,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":425,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":427,"title":{},"body":{"index.html":{}}}],["started",{"_index":402,"title":{"index.html":{}},"body":{}}],["starter",{"_index":415,"title":{},"body":{"index.html":{}}}],["statements",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":112,"title":{},"body":{"classes/CommonEntity.html":{},"injectables/LoggerMiddleware.html":{},"classes/UserTypeEntity.html":{},"injectables/UserTypesService.html":{}}}],["status':1",{"_index":312,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["status:\"200",{"_index":321,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["status:\"204",{"_index":305,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["stay",{"_index":450,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":441,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":461,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["table",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":430,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":433,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":432,"title":{},"body":{"index.html":{}}}],["tests",{"_index":429,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":439,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.userrepository.findone({latest_token:token",{"_index":180,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.usersservice.create(createuserdto",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usertyperepository.delete(id",{"_index":323,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["this.usertyperepository.find",{"_index":308,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["this.usertyperepository.findone(id",{"_index":314,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["this.usertyperepository.save(newdata",{"_index":298,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["this.usertyperepository.softdelete(id",{"_index":319,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["this.usertyperepository.update(id",{"_index":317,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["this.usertypesservice.create(createusertypedto",{"_index":260,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["this.usertypesservice.finaldelete(id",{"_index":270,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["this.usertypesservice.findall",{"_index":261,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["this.usertypesservice.findalllist",{"_index":262,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["this.usertypesservice.findone(id",{"_index":264,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["this.usertypesservice.remove(id",{"_index":268,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["this.usertypesservice.update(id",{"_index":266,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["token",{"_index":167,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["touch",{"_index":451,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"classes/UserTypeEntity.html":{}}}],["try",{"_index":163,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["twitter",{"_index":457,"title":{},"body":{"index.html":{}}}],["type",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/UserTypeEntity.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.dto",{"_index":203,"title":{},"body":{"classes/UpdateUserTypeDto.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{}}}],["type.dto.ts",{"_index":148,"title":{},"body":{"classes/CreateUserTypeDto.html":{},"classes/UpdateUserTypeDto.html":{},"coverage.html":{}}}],["type.dto.ts:7",{"_index":149,"title":{},"body":{"classes/CreateUserTypeDto.html":{}}}],["type.entity",{"_index":276,"title":{},"body":{"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{}}}],["type.entity.ts",{"_index":208,"title":{},"body":{"classes/UserTypeEntity.html":{},"coverage.html":{}}}],["type.entity.ts:7",{"_index":212,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["typeorm",{"_index":129,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{},"injectables/UserTypesService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{}}}],["typeormmodule.forfeature([usertypeentity",{"_index":277,"title":{},"body":{"modules/UserTypesModule.html":{}}}],["typeormmodule.forroot",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":197,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserTypeDto.html":{},"controllers/UserTypesController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["types.controller",{"_index":274,"title":{},"body":{"modules/UserTypesModule.html":{}}}],["types.controller.ts",{"_index":224,"title":{},"body":{"controllers/UserTypesController.html":{},"coverage.html":{}}}],["types.controller.ts:11",{"_index":234,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["types.controller.ts:16",{"_index":238,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["types.controller.ts:21",{"_index":240,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["types.controller.ts:26",{"_index":243,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["types.controller.ts:31",{"_index":249,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["types.controller.ts:36",{"_index":246,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["types.controller.ts:41",{"_index":237,"title":{},"body":{"controllers/UserTypesController.html":{}}}],["types.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["types.module.ts",{"_index":273,"title":{},"body":{"modules/UserTypesModule.html":{}}}],["types.service",{"_index":255,"title":{},"body":{"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{}}}],["types.service.ts",{"_index":278,"title":{},"body":{"injectables/UserTypesService.html":{},"coverage.html":{}}}],["types.service.ts:13",{"_index":285,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["types.service.ts:28",{"_index":287,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["types.service.ts:41",{"_index":288,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["types.service.ts:54",{"_index":289,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["types.service.ts:63",{"_index":291,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["types.service.ts:73",{"_index":290,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["types.service.ts:87",{"_index":286,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["types.service.ts:9",{"_index":283,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["types/dto/create",{"_index":146,"title":{},"body":{"classes/CreateUserTypeDto.html":{},"coverage.html":{}}}],["types/dto/update",{"_index":202,"title":{},"body":{"classes/UpdateUserTypeDto.html":{},"coverage.html":{}}}],["types/entities/user",{"_index":207,"title":{},"body":{"classes/UserTypeEntity.html":{},"coverage.html":{}}}],["types/user",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"coverage.html":{}}}],["typescript",{"_index":414,"title":{},"body":{"index.html":{}}}],["unique",{"_index":211,"title":{},"body":{"classes/UserTypeEntity.html":{}}}],["unit",{"_index":428,"title":{},"body":{"index.html":{}}}],["update",{"_index":231,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":265,"title":{},"body":{"controllers/UserTypesController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":247,"title":{},"body":{"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updated_at",{"_index":113,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["updatedatecolumn",{"_index":125,"title":{},"body":{"classes/CommonEntity.html":{},"classes/UserTypeEntity.html":{}}}],["updates",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":193,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateusertypedto",{"_index":201,"title":{"classes/UpdateUserTypeDto.html":{}},"body":{"classes/UpdateUserTypeDto.html":{},"controllers/UserTypesController.html":{},"injectables/UserTypesService.html":{},"coverage.html":{}}}],["use",{"_index":151,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":152,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["user",{"_index":147,"title":{"classes/User.html":{}},"body":{"classes/CreateUserTypeDto.html":{},"classes/UpdateUserTypeDto.html":{},"classes/User.html":{},"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":199,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":135,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:7",{"_index":137,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["username",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":346,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":326,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":335,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertypeentity",{"_index":206,"title":{"classes/UserTypeEntity.html":{}},"body":{"classes/UserTypeEntity.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"coverage.html":{}}}],["usertyperepository",{"_index":284,"title":{},"body":{"injectables/UserTypesService.html":{}}}],["usertypescontroller",{"_index":223,"title":{"controllers/UserTypesController.html":{}},"body":{"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"coverage.html":{}}}],["usertypesmodule",{"_index":41,"title":{"modules/UserTypesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules.html":{},"overview.html":{}}}],["usertypesservice",{"_index":254,"title":{"injectables/UserTypesService.html":{}},"body":{"controllers/UserTypesController.html":{},"modules/UserTypesModule.html":{},"injectables/UserTypesService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":141,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTypeDto.html":{},"dependencies.html":{}}}],["value",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":467,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":423,"title":{},"body":{"index.html":{}}}],["website",{"_index":455,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":444,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/UserTypesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nUserTypesModule\n\nUserTypesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserTypesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserTypesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './modules/users/users.module';\nimport { UserTypesModule } from './modules/user-types/user-types.module';\nimport { LoggerMiddleware } from './logger.middleware';\nimport { checkAuthRoutes, doNotCheckAuthRoutes } from './routes.auth-check';\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      insecureAuth: false,\n      type: 'mysql',\n      host: process.env.DATABASE_HOST,\n      port: Number(process.env.DATABASE_PORT),\n      username: process.env.DATABASE_USER,\n      password: process.env.DATABASE_PASSWORD,\n      database: process.env.DATABASE_DB,\n      synchronize: true,\n      logging: true,// IF true THEN WILL LOG DATABASE SCHEMA\n      dropSchema: false,\n      entities: ['dist/**/*.entity.js'],\n    }),\n    UsersModule,\n    UserTypesModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\n// export class AppModule {}\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).exclude( ...doNotCheckAuthRoutes ).forRoutes();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Your System on Fire(🔥)!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonEntity.html":{"url":"classes/CommonEntity.html","title":"class - CommonEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common.entity.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column, CreateDateColumn, DeleteDateColumn, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\"\n\nexport abstract class CommonEntity extends BaseEntity {\n    @PrimaryGeneratedColumn(\"uuid\")\n    id: string;\n\n    @Column({default:1})\n    status: number;\n\n    @CreateDateColumn()\n    created_at: Date\n\n    @UpdateDateColumn()\n    updated_at: Date\n\n    @DeleteDateColumn()\n    deleted_at: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@MinLength(3)@MaxLength(200)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class CreateUserDto {\n    @IsString()\n    @MinLength(3)\n    @MaxLength(200)\n    name: string;\n    \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTypeDto.html":{"url":"classes/CreateUserTypeDto.html","title":"class - CreateUserTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-types/dto/create-user-type.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@MinLength(3)@MaxLength(200)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-types/dto/create-user-type.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class CreateUserTypeDto {\n    @IsString()\n    @MinLength(3)\n    @MaxLength(200)\n    name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/logger.middleware.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n    use(req: Request, res: Response, next: NextFunction) {\n        // let responseInterface;\n        // try{\n        // const authorizationHeader = req.headers['authorization'];\n        // let token;\n        // if(authorizationHeader){\n        //     token = authorizationHeader.split(' ')[1];\n        // }\n        // if(token){\n        //     let jwtDecode =  jwt.verify(token, process.env.SECRET);\n        //     req.body['_user'] = jwtDecode;\n        //     req.body['_user_id'] = req.body['_user'].data.id;\n        //     req.body['user_type'] = req.body['_user'].data.user_type;\n        //     const cross_check_user = this.userRepository.findOne({latest_token:token});\n        //     if(cross_check_user){\n        //     Logger.log(req.body['_user_id'])\n        //     next();\n        //     }else{\n        //     responseInterface = {\n        //         status: false,\n        //         error_message: 'Token Is Expired!',\n        //     };\n        //     return res.status(403).json(responseInterface);\n        //     }\n        // }else{\n        //     responseInterface = {\n        //     status: false,\n        //     error_message: 'No token provided!',\n        //     };\n        //     return res.status(403).json(responseInterface);\n        // }\n        // }catch (e) {\n        // responseInterface = {\n        //     status: false,\n        //     error_message: 'Invalid Token',\n        // };\n        \n        // return res.status(401).json(responseInterface);\n        // }\n        console.log(req.headers)\n        console.log('Request...');\n        next();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserTypeDto.html":{"url":"classes/UpdateUserTypeDto.html","title":"class - UpdateUserTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-types/dto/update-user-type.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserTypeDto } from './create-user-type.dto';\n\nexport class UpdateUserTypeDto extends PartialType(CreateUserTypeDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTypeEntity.html":{"url":"classes/UserTypeEntity.html","title":"class - UserTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-types/entities/user-type.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CommonEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-types/entities/user-type.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CommonEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CommonEntity:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CommonEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CommonEntity:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CommonEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CommonEntity:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CommonEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CommonEntity:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CommonEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CommonEntity:14\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity } from \"typeorm\";\nimport { CommonEntity } from \"../../../common.entity\";\n\n@Entity('user_types')\nexport class UserTypeEntity extends CommonEntity {\n    @Column({ nullable: false, unique: true })\n    name: string | null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserTypesController.html":{"url":"controllers/UserTypesController.html","title":"controller - UserTypesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserTypesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-types/user-types.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user-types\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                finalDelete\n                            \n                            \n                                findAll\n                            \n                            \n                                findAllList\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserTypeDto: CreateUserTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/user-types/user-types.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserTypeDto\n                                    \n                                                CreateUserTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalDelete\n                        \n                        \n                    \n                \n            \n            \n                \nfinalDelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user-types/user-types.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/user-types/user-types.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAllList\n                        \n                        \n                    \n                \n            \n            \n                \nfindAllList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')\n                \n            \n\n            \n                \n                    Defined in src/modules/user-types/user-types.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user-types/user-types.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user-types/user-types.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserTypeDto: UpdateUserTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user-types/user-types.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserTypeDto\n                                    \n                                                UpdateUserTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { UserTypesService } from './user-types.service';\nimport { CreateUserTypeDto } from './dto/create-user-type.dto';\nimport { UpdateUserTypeDto } from './dto/update-user-type.dto';\n\n@Controller('user-types')\nexport class UserTypesController {\n  constructor(private readonly userTypesService: UserTypesService) {}\n\n  @Post()\n  create(@Body() createUserTypeDto: CreateUserTypeDto) {\n    return this.userTypesService.create(createUserTypeDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.userTypesService.findAll();\n  }\n\n  @Get('/list')\n  findAllList() {\n    return this.userTypesService.findAllList();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userTypesService.findOne(id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateUserTypeDto: UpdateUserTypeDto) {\n    return this.userTypesService.update(id, updateUserTypeDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userTypesService.remove(id);\n  }\n\n  @Delete('/delete/:id')\n  finalDelete(@Param('id') id: string) {\n    return this.userTypesService.finalDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserTypesModule.html":{"url":"modules/UserTypesModule.html","title":"module - UserTypesModule","body":"\n                   \n\n\n\n\n    Modules\n    UserTypesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserTypesModule\n\n\n\ncluster_UserTypesModule_providers\n\n\n\n\nUserTypesService\n\nUserTypesService\n\n\n\nUserTypesModule\n\nUserTypesModule\n\nUserTypesModule -->\n\nUserTypesService->UserTypesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user-types/user-types.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserTypesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserTypesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserTypesService } from './user-types.service';\nimport { UserTypesController } from './user-types.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserTypeEntity } from './entities/user-type.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserTypeEntity])],\n  controllers: [UserTypesController],\n  providers: [UserTypesService]\n})\nexport class UserTypesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserTypesService.html":{"url":"injectables/UserTypesService.html","title":"injectable - UserTypesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserTypesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-types/user-types.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                finalDelete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllList\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userTypeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user-types/user-types.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userTypeRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserTypeDto: CreateUserTypeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-types/user-types.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserTypeDto\n                                    \n                                                CreateUserTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            finalDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    finalDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-types/user-types.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-types/user-types.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllList()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-types/user-types.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-types/user-types.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-types/user-types.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserTypeDto: UpdateUserTypeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-types/user-types.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserTypeDto\n                                    \n                                                UpdateUserTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserTypeDto } from './dto/create-user-type.dto';\nimport { UpdateUserTypeDto } from './dto/update-user-type.dto';\nimport { UserTypeEntity } from './entities/user-type.entity';\n\n@Injectable()\nexport class UserTypesService {\n  constructor (\n    @InjectRepository(UserTypeEntity) private readonly userTypeRepository: Repository,\n  ){}\n  async create(createUserTypeDto: CreateUserTypeDto) {\n    const { name } = createUserTypeDto;\n    const newData = { \"name\": name };\n    const createNewUserType =  await this.userTypeRepository.save(newData)\n    if( createNewUserType ){\n      return {\n        \"data\": createNewUserType,\n        \"status\": 201,\n        \"message\": \"New Entry Created\",\n      };\n    }else{\n      return {status:\"204\", message:\"No Data Created!\"};\n    }\n  }\n\n  async findAll() {\n    const expectedData = await this.userTypeRepository.find();\n    if( expectedData ){\n      return {\n        \"data\": expectedData,\n        \"status\": 200,\n        \"message\": \"All Data Fetched\",\n      };\n    }else{\n      return {status:\"204\", message:\"No Data Found!\"};\n    }\n  }\n\n  async findAllList() {\n    const expectedData = await this.userTypeRepository.find({ 'status':1 });\n    if( expectedData ){\n      return {\n        \"data\": expectedData,\n        \"status\": 200,\n        \"message\": \"All Active Data Fetched\",\n      };\n    }else{\n      return {status:\"204\", message:\"No Data Found!\"};\n    }\n  }\n\n  async findOne(id: string) {\n    const expectedData = await this.userTypeRepository.findOne(id);\n    if( expectedData ){\n      return expectedData;\n    }else{\n      return {status:\"204\", message:\"Data Deleted or Not Found!\"};\n    }\n  }\n\n  async update(id: string, updateUserTypeDto: UpdateUserTypeDto) {\n    const expectedData = await this.userTypeRepository.findOne(id);\n    if( expectedData ){\n      await this.userTypeRepository.update(id, updateUserTypeDto);\n      return await this.userTypeRepository.findOne(id);\n    }else{\n      return {status:\"204\", message:\"Data Deleted or Not Found!\"};\n    }\n  }\n\n  async remove(id: string) {\n    const expectedData = await this.userTypeRepository.findOne(id);\n    if( expectedData ){\n      const deletedData = await this.userTypeRepository.softDelete(id);\n      if(deletedData.raw.changedRows == 1){\n        return {status:\"200\", message:\"Data has been Deleted!\"};\n      }else{\n        return {status:\"204\", message:\"Data can not Delete!\"};\n      }\n    }else{\n      return {status:\"204\", message:\"Data Already Deleted or Not Found!\"};\n    }\n  }\n\n  async finalDelete(id: string) {\n    const expectedData = await this.userTypeRepository.findOne(id);\n    if( expectedData ){\n      const deletedData = await this.userTypeRepository.delete(id);\n      if(deletedData.raw.affectedRows > 0){\n        return {status:\"200\", message:\"Data has been Deleted!\"};\n      }else{\n        return {status:\"204\", message:\"Data can not Delete!\"};\n      }\n    }else{\n      return {status:\"204\", message:\"Data Already Deleted or Not Found!\"};\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Put(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common.entity.ts\n            \n            class\n            CommonEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user-types/dto/create-user-type.dto.ts\n            \n            class\n            CreateUserTypeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user-types/dto/update-user-type.dto.ts\n            \n            class\n            UpdateUserTypeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user-types/entities/user-type.entity.ts\n            \n            class\n            UserTypeEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user-types/user-types.controller.ts\n            \n            controller\n            UserTypesController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user-types/user-types.service.ts\n            \n            injectable\n            UserTypesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/routes.auth-check.ts\n            \n            variable\n            checkAuthRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/routes.auth-check.ts\n            \n            variable\n            doNotCheckAuthRoutes\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.13\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/mapped-types : ^0.3.0\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^8.2.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            typeorm : ^0.2.31\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserTypesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UserTypesModule\n\n\n\ncluster_UserTypesModule_providers\n\n\n\n\nUserTypesModule\n\nUserTypesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserTypesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nUserTypesService\n\nUserTypesService\n\nUserTypesModule -->\n\nUserTypesService->UserTypesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkAuthRoutes   (src/.../routes.auth-check.ts)\n                        \n                        \n                            doNotCheckAuthRoutes   (src/.../routes.auth-check.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/routes.auth-check.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    '/user-types',\n    'users',\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doNotCheckAuthRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    '/register',\n    '/login',\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
